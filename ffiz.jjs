// Generated by CoffeeScript 1.12.4
var GObject, GObjectPtr, ObjectPtrPtr, ffi, game, ref, sdx;

ffi = require('ffi');

ref = require('ref');

GObject = ref.types["void"];

GObjectPtr = ref.refType(GObject);

ObjectPtrPtr = ref.refType(GObjectPtr);

sdx = ffi.Library('sdx', {
  sdx_createJsGame: [GObjectPtr, ['string', 'int', 'int', 'string']],
  sdx_createSprite: [GObjectPtr, ['string']],
  sdx_createAtlas: [GObjectPtr, ['string']],
  sdx_createSound: [GObjectPtr, ['string']],
  sdx_createFont: [GObjectPtr, ['string', 'int']],
  sdx_createText: [GObjectPtr, ['string', GObjectPtr, GObjectPtr]],
  sdx_createColor: [GObjectPtr, ['double', 'double', 'double', 'double']],
  sdx_audio_sound_play: ['void', [GObjectPtr, 'int']],
  sdx_graphics_color_get_r: ['double', [GObjectPtr]],
  sdx_graphics_color_set_r: ['void', [GObjectPtr, 'double']],
  sdx_graphics_color_get_g: ['double', [GObjectPtr]],
  sdx_graphics_color_set_g: ['void', [GObjectPtr, 'double']],
  sdx_graphics_color_get_b: ['double', [GObjectPtr]],
  sdx_graphics_color_set_b: ['void', [GObjectPtr, 'double']],
  sdx_graphics_color_get_a: ['double', [GObjectPtr]],
  sdx_graphics_color_set_a: ['void', [GObjectPtr, 'double']],
  sdx_graphics_color_get_RED: [GObjectPtr, []],
  sdx_graphics_s2d_font_get_path: ['string', [GObjectPtr]],
  sdx_graphics_s2d_sprite_get_x: ['int', [GObjectPtr]],
  sdx_graphics_s2d_sprite_set_x: ['void', [GObjectPtr, 'int']],
  sdx_graphics_s2d_sprite_get_y: ['int', [GObjectPtr]],
  sdx_graphics_s2d_sprite_set_y: ['void', [GObjectPtr, 'int']],
  sdx_graphics_s2d_sprite_get_r: ['double', [GObjectPtr]],
  sdx_graphics_s2d_sprite_set_r: ['void', [GObjectPtr, 'double']],
  sdx_graphics_s2d_sprite_get_g: ['double', [GObjectPtr]],
  sdx_graphics_s2d_sprite_set_g: ['void', [GObjectPtr, 'double']],
  sdx_graphics_s2d_sprite_get_b: ['double', [GObjectPtr]],
  sdx_graphics_s2d_sprite_set_b: ['void', [GObjectPtr, 'double']],
  sdx_graphics_s2d_sprite_get_a: ['double', [GObjectPtr]],
  sdx_graphics_s2d_sprite_set_a: ['void', [GObjectPtr, 'double']],
  sdx_graphics_s2d_sprite_get_width: ['int', [GObjectPtr]],
  sdx_graphics_s2d_sprite_set_width: ['void', [GObjectPtr, 'int']],
  sdx_graphics_s2d_sprite_get_height: ['int', [GObjectPtr]],
  sdx_graphics_s2d_sprite_set_height: ['void', [GObjectPtr, 'int']],
  sdx_graphics_s2d_sprite_get_centered: ['bool', [GObjectPtr]],
  sdx_graphics_s2d_sprite_set_centered: ['void', [GObjectPtr, 'bool']],
  sdx_graphics_s2d_sprite_get_layer: ['int', [GObjectPtr]],
  sdx_graphics_s2d_sprite_set_layer: ['void', [GObjectPtr, 'int']],
  sdx_graphics_s2d_sprite_setScale: ['void', [GObjectPtr, 'double', 'double']],
  sdx_graphics_s2d_sprite_setColor: ['void', [GObjectPtr, 'double', 'double', 'double']],
  sdx_graphics_s2d_sprite_setText: ['void', [GObjectPtr, 'string', GObjectPtr, GObjectPtr]],
  sdx_graphics_s2d_texture_atlas_createSprite: [GObjectPtr, [GObjectPtr, 'string']],
  sdx_js_game_start: ['void', [GObjectPtr]],
  sdx_js_game_get_running: ['bool', [GObjectPtr]],
  sdx_js_game_handleEvents: ['void', [GObjectPtr]],
  sdx_js_game_getKey: ['bool', [GObjectPtr, 'int']],
  sdx_js_game_draw: ['void', [GObjectPtr]],
  sdx_js_game_get_profile: ['bool', [GObjectPtr]],
  sdx_js_game_set_profile: ['void', [GObjectPtr, 'bool']],
  sdx_js_game_get_mouse_x: ['int', [GObjectPtr]],
  sdx_js_game_get_mouse_y: ['int', [GObjectPtr]],
  sdx_js_game_get_mouse_down: ['bool', [GObjectPtr]],
  sdx_js_game_get_show_fps: ['bool', [GObjectPtr]],
  sdx_js_game_set_show_fps: ['void', [GObjectPtr], 'bool'],
  sdx_js_game_get_delta_time: ['double', [GObjectPtr]]
});

Object.defineProperties(sdx, {
  createGame: {
    value: function(title, height, width, base) {
      var game;
      game = sdx.sdx_createJsGame(title, height, width, base);
      Object.defineProperties(game, {
        name: {
          get: function() {
            return sdx.sdx_js_game_get_name(game);
          }
        },
        base: {
          get: function() {
            return sdx.sdx_js_game_get_base(game);
          }
        },
        running: {
          get: function() {
            return sdx.sdx_js_game_get_running(game);
          }
        },
        profile: {
          get: function() {
            return sdx.sdx_js_game_get_profile(game);
          },
          set: function(v) {
            return sdx.sdx_js_game_set_profile(game, v);
          }
        },
        mouseX: {
          get: function() {
            return sdx.sdx_js_game_get_mouse_x(game);
          }
        },
        mouseY: {
          get: function() {
            return sdx.sdx_js_game_get_mouse_y(game);
          }
        },
        mouseDown: {
          get: function() {
            return sdx.sdx_js_game_get_mouse_down(game);
          }
        },
        showFps: {
          get: function() {
            return sdx.sdx_js_game_get_show_fps(game)({
              set: function(v) {
                return sdx.sdx_js_game_set_show_fps(game, v);
              }
            });
          }
        },
        deltaTime: {
          get: function() {
            return sdx.sdx_js_game_get_delta_time(game);
          }
        },
        start: {
          value: function() {
            return sdx.sdx_js_game_start(game);
          }
        },
        handleEvents: {
          value: function() {
            return sdx.sdx_js_game_handleEvents(game);
          }
        },
        getKey: {
          value: function(key) {
            return sdx.sdx_js_game_getKey(game, key);
          }
        },
        draw: {
          value: function() {
            return sdx.sdx_js_game_draw(game);
          }
        },
        addSprite: {
          value: function(sprite) {
            return sdx.sdx_js_game_draw(game, sprite);
          }
        },
        addOnce: {
          value: function(sprite) {
            return sdx.sdx_js_game_draw(game, sprite);
          }
        },
        removeSprite: {
          value: function(sprite) {
            return sdx.sdx_js_game_draw(game, sprite);
          }
        }
      });
      return game;
    }
  },
  createSprite: {
    value: function(path) {
      var sprite;
      sprite = sdx.sdx_createSprite(path);
      Object.defineProperties(sprite, {
        x: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_x(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_x(sprite, v);
              }
            });
          }
        },
        y: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_y(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_y(sprite, v);
              }
            });
          }
        },
        r: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_r(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_r(sprite, v);
              }
            });
          }
        },
        g: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_g(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_g(sprite, v);
              }
            });
          }
        },
        b: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_b(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_b(sprite, v);
              }
            });
          }
        },
        a: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_a(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_a(sprite, v);
              }
            });
          }
        },
        width: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_width(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_width(sprite, v);
              }
            });
          }
        },
        height: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_height(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_height(sprite, v);
              }
            });
          }
        },
        centered: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_centered(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_centered(sprite, v);
              }
            });
          }
        },
        layer: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_layer(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_layer(sprite, v);
              }
            });
          }
        },
        setScale: {
          value: function(x, y) {
            return sdx.sdx_graphics_s2d_sprite_setScale(sprite, x, y);
          }
        },
        setColor: {
          value: function(r, g, b) {
            return sdx.sdx_graphics_s2d_sprite_setColor(sprite, r, g, b);
          }
        },
        setText: {
          value: function(str, font, color) {
            return sdx.sdx_graphics_s2d_sprite_setText(sprite, str, font, color);
          }
        }
      });
      return sprite;
    }
  },
  createAtlas: {
    value: function(path) {
      var atlas;
      atlas = sdx.sdx_createAtlas(path);
      Object.defineProperties(atlas, {
        createSprite: {
          value: function(path, index) {
            return sdx.sdx_graphics_s2d_texture_atlas_createSprite(atlas, path, index);
          }
        }
      });
      return atlas;
    }
  },
  createSound: {
    value: function(path) {
      var sound;
      sound = sdx.sdx_createSound(path);
      Object.defineProperties(sound, {
        play: {
          value: function(l) {
            return sdx.sdx_audio_sound_play(sound, l);
          }
        }
      });
      return sound;
    }
  },
  createFont: {
    value: function(path, size) {
      var font;
      font = sdx.sdx_createFont(path, size);
      Object.defineProperties(font, {
        path: {
          get: function() {
            return sdx.sdx_graphics_s2d_font_get_path(font);
          }
        }
      });
      return font;
    }
  },
  createText: {
    value: function(text, font, color) {
      var sprite;
      sprite = sdx.sdx_createText(text, font, color);
      Object.defineProperties(sprite, {
        x: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_x(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_x(sprite, v);
              }
            });
          }
        },
        y: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_y(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_y(sprite, v);
              }
            });
          }
        },
        r: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_r(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_r(sprite, v);
              }
            });
          }
        },
        g: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_g(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_g(sprite, v);
              }
            });
          }
        },
        b: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_b(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_b(sprite, v);
              }
            });
          }
        },
        a: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_a(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_a(sprite, v);
              }
            });
          }
        },
        width: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_width(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_width(sprite, v);
              }
            });
          }
        },
        height: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_height(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_height(sprite, v);
              }
            });
          }
        },
        centered: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_centered(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_centered(sprite, v);
              }
            });
          }
        },
        layer: {
          get: function() {
            return sdx.sdx_graphics_s2d_sprite_get_layer(sprite)({
              set: function(v) {
                return sdx.sdx_graphics_s2d_sprite_set_layer(sprite, v);
              }
            });
          }
        },
        setScale: {
          value: function(x, y) {
            return sdx.sdx_graphics_s2d_sprite_setScale(sprite, x, y);
          }
        },
        setColor: {
          value: function(r, g, b) {
            return sdx.sdx_graphics_s2d_sprite_setColor(sprite, r, g, b);
          }
        },
        setText: {
          value: function(str, font, color) {
            return sdx.sdx_graphics_s2d_sprite_setText(sprite, str, font, color);
          }
        }
      });
      return sprite;
    }
  },
  createColor: {
    value: function(r, g, b, a) {
      var color;
      color = sdx.sdx_createColor(r, g, b, a);
      Object.defineProperties(color, {
        r: {
          get: function() {
            return sdx.sdx_graphics_color_get_r(color)({
              set: function(v) {
                return sdx.sdx_graphics_color_set_r(color, v);
              }
            });
          }
        },
        g: {
          get: function() {
            return sdx.sdx_graphics_color_get_g(color)({
              set: function(v) {
                return sdx.sdx_graphics_color_set_g(color, v);
              }
            });
          }
        },
        b: {
          get: function() {
            return sdx.sdx_graphics_color_get_b(color)({
              set: function(v) {
                return sdx.sdx_graphics_color_set_b(color, v);
              }
            });
          }
        },
        a: {
          get: function() {
            return sdx.sdx_graphics_color_get_a(color)({
              set: function(v) {
                return sdx.sdx_graphics_color_set_a(color, v);
              }
            });
          }
        }
      });
      return color;
    }
  },
  graphics: {
    value: {}
  }
});

Object.defineProperties(sdx.graphics, {
  color: {
    value: {}
  }
});

Object.defineProperties(sdx.graphics.color, {
  RED: {
    get: function() {
      return sdx.sdx_graphics_color_get_RED();
    }
  },
  LIME: {
    get: function() {
      return sdx.sdx_graphics_color_get_LIME();
    }
  }
});

game = sdx.createGame("Frodo", 400, 600, "/home/bruce/gjs/gjs-vala-sdl2/data/");

game.start();

game.profile = true;

while (game.running) {
  game.handleEvents();
  if (game.getKey(27)) {
    break;
  } else {
    game.draw();
  }
}
